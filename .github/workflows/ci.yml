name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  main:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: ['16.x', '18.x', 19]
        os: [ubuntu-latest]
      fail-fast: false

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: cocktails-ci
          PGDATA: /data/postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: 'postgresql://user:password@postgres:5432/cocktails-ci'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Format check
        run: npx nx format:check

      - name: Prepare env
        run: cp .env.example .env.test

      - name: Run API tests
        env:
          DATEBASE_URL: ${{env.DATABASE_URL}}
        run: NODE_ENV=test NX_BRANCH=ci npx nx run api:test --verbose --configuration=ci --clearCache --setupFile={projectRoot}/apps/api/jest-setup.ts

      - name: Upload api coverage reports to codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: api
          files: ./coverage/apps/api/coverage-final.json

      - name: Notify build status
        if: always()
        run: echo "Build ${{ job.status }}"
